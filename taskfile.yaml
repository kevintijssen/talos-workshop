version: '3'

tasks:
  start-talos:
    silent: true
    aliases: [up]
    cmds:
    - gum spin --show-error --title="Starting Talos containers..." -- docker-compose up -d
    - echo "Talos containers started"

  stop-talos:
    silent: true
    aliases: [down]
    cmds:
    - gum spin --show-error --title="Stopping Talos containers..." -- docker-compose down
    - echo "Talos containers stopped"

  gen-config:
    silent: true
    cmds:
    - gum spin --show-error --title="Generate Talos Config..." -- talosctl gen config workshop https://{{.IP_CP}}:6443 --with-docs=false --with-examples=false --kubernetes-version=1.29.7 --force
    - echo "Talos config created"
    vars:
      IP_CP:
        sh: docker inspect talos-cp | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'

  docker-patch:
    silent: true
    cmds:
    - |
      gum spin --show-error --title="Creating Talos patch for Docker..." -- \
      echo "machine:
        features:
          hostDNS:
            forwardKubeDNSToHost: true" > patch-docker.yaml
    - echo "Talos patch for Docker created"

  update-talosconfig:
    silent: true
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
    - talosctl config node {{.IP_CP}}
    - talosctl config endpoint {{.IP_CP}}
    vars:
      IP_CP:
        sh: docker inspect talos-cp | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'

  apply-config:
    silent: true
    cmds:
    - gum spin --show-error --title="Applying Talos Controlplane config..." -- sleep 5 && talosctl apply-config -f controlplane.yaml -n {{.IP_CP}} -p @patch-docker.yaml --insecure
    - echo "Talos Controlplane config applied on {{.IP_CP}}"
    - gum spin --show-error --title="Applying Talos Worker config..." -- talosctl apply-config -f worker.yaml -n {{.IP_WRK}} -p @patch-docker.yaml --insecure
    - echo "Talos Worker config applied on {{.IP_WRK}}"
    vars:
      IP_CP:
        sh: docker inspect talos-cp | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'
      IP_WRK:
        sh: docker inspect talos-worker | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'

  bootstrap:
    silent: true
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
    - |
      gum spin --show-error --title="Bootstrapping Talos cluster..." -- \
      sleep 10 && talosctl bootstrap; talosctl health

  get-kubeconfig:
    silent: true
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
    - talosctl kubeconfig --force
    - kubectl get nodes

##################################

  upgrade-talos:
    silent: true
    env:
      TALOS_VERSION: 1.7.5
    cmds:
      - echo "Change Talos version to $TALOS_VERSION"
      - sed -i 's/1.7.4/'"$TALOS_VERSION"'/g' compose.yaml 
      - |
        gum spin --show-error --title="Upgrading Controlplane..." -- \
        docker compose up -d talos-cp && echo "Waiting for the Controlplane node to be Ready..." && while ! kubectl get nodes talos-cp -o jsonpath='{.status.nodeInfo.osImage}' 2> /dev/null | grep -q '1.7.5' ; do sleep 5; done
      - echo "Upgrade of Controlplane completed!"
      - |
        gum spin --show-error --title="Upgrading Worker..." -- \
        docker compose up -d talos-worker && echo "Waiting for the Worker node to be Ready..." && while ! kubectl get nodes talos-worker -o jsonpath='{.status.nodeInfo.osImage}' 2> /dev/null | grep -q '1.7.5'; do sleep 5; done
      - echo "Upgrade of Worker completed!" 


  upgrade-k8s:
    silent: true
    cmds:
      - |
        echo "To which Kubernetes version do you want to upgrade?"
        K8S_VERSION=$(gum choose "1.30.3" "1.30.2" "1.30.1" "1.30.0")
        echo "Started Kubernetes upgrade $K8S_VERSION"
        talosctl upgrade-k8s --to=$K8S_VERSION


##################################

  reset-talos:
    silent: true
    cmds:
      - gum spin --show-error --title="Deleting Talos config..." -- rm -rf talosconfig controlplane.yaml worker.yaml patch-docker.yaml
      - echo "Talos config deleted"

  reset-docker:
    silent: true
    cmds:
      - task: stop-talos
      - gum spin --show-error --title="Deleting Docker volumes..." -- docker volume prune --all --force
      - echo "Docker volumes deleted"
      - gum spin --show-error --title="Restoring original compose.yaml..." -- git restore compose.yaml
      - echo "compose.yaml restored"

  reset-all:
    silent: true
    cmds:
     - task: reset-docker
     - task: reset-talos

  AIO:
    silent:
    cmds:
    - task: reset-all
    - task: start-talos
    - task: gen-config
    - task: docker-patch
    - task: update-talosconfig
    - task: apply-config
    - task: bootstrap
    - task: get-kubeconfig